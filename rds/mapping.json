{
    "serviceprovider":"aws",
    "servicerequirement_name": [
        "AWS::RDS::*"
    ],
    "servicedisplay_name": "RDS",
    "serviceapproval_status": {
        "Prod": "approved",
        "SNP": "approved",
        "NP": "approved"
    },
    "phase": "discovery",
    "mapping": [
        {
            "requirement_name": "Implement access controls to enforce least privilege",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/rds/RUNBOOK.md#1-implement-access-controls-to-enforce-least-privilege",
            "category": "IAM",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Data is protected at-rest and in-transit",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/rds/RUNBOOK.md#2-data-is-protected-at-rest-and-in-transit",
            "category": "Encryption",
            "ticket_enabled": "true",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": [
                {
                    "provider": "dome9",
                    "implementation": [
                        "https://bitbucket.capgroup.com/projects/CLSEC/repos/dome9/browse/AWS_Rulesets/CG-AWS-SO-EncryptionAndKeyManagement.json#33"
                    ],
                    "type": "detect"
                },
                {
                    "provider": "sentinel",
                    "implementation": [
                        "https://github.com/open-itg/sentinel_policies/blob/master/sagemaker_policies/sagemaker_standards.sentinel"
                    ],
                    "type": "prevent"
                }
            ]
        },
        {
            "requirement_name": "Database instances are configured for high-availability",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/rds/RUNBOOK.md#3-database-instances-are-configured-for-high-availability",
            "category": "Best Practice",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Network controls are restrictive",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/rds/RUNBOOK.md#4-network-controls-are-restrictive",
            "category": "Public Access",
            "ticket_enabled": "true",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": [
                {
                    "provider": "dome9",
                    "implementation": [
                        "https://bitbucket.capgroup.com/projects/CLSEC/repos/dome9/browse/AWS_Rulesets/CG-AWS-SO-Database.json#13",
                        "https://bitbucket.capgroup.com/projects/CLSEC/repos/dome9/browse/AWS_Rulesets/CG-AWS-SO-Database.json#23"
                    ],
                    "type": "detect"
                },
                {
                    "provider": "panoptes",
                    "implementation": [
                        "https://github.com/open-itg/panoptes/blob/master/panoptes-rules/rds.py"
                    ],
                    "type": "prevent"
                },
                {
                    "provider": "sentinel",
                    "implementation": [
                        "https://github.com/open-itg/sentinel_policies/blob/master/broad_policies/privacy_standards_policies/rds_standards.sentinel"
                    ],
                    "type": "prevent"
                }
            ]
        },
        {
            "requirement_name": "Store database secrets in a vault for automatic rotation",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/rds/RUNBOOK.md#5-store-database-secrets-in-a-vault-for-automatic-rotation",
            "category": "Best Practice",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Monitor RDS DB instances status",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/rds/RUNBOOK.md#1-monitor-rds-db-instances-status",
            "category": "Logging",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Log Amazon RDS API calls",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/rds/RUNBOOK.md#2-log-amazon-rds-api-calls",
            "category": "Logging",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Utilize Amazon RDS Event Notifications utilizing Amazon SNS",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/rds/RUNBOOK.md#3-utilize-amazon-rds-event-notifications-utilizing-amazon-sns",
            "category": "Logging",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Utilize AWS Config rules to monitor RDS for control compliance",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/rds/RUNBOOK.md#4-utilize-aws-config-rules-to-monitor-rds-for-control-compliance",
            "category": "Best Practice",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Utilize Amazon CloudWatch Events and Amazon EventBridge Events for Amazon RDS",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/rds/RUNBOOK.md#1-utilize-amazon-cloudwatch-events-and-amazon-eventbridge-events-for-amazon-rds",
            "category": "Logging",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "AWS RDS auto minor version upgrade is enabled",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/rds/RUNBOOK.md#5-aws-rds-auto-minor-version-upgrade-is-enabled",
            "category": "Best Practice",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Deny All Regions Outside of US",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/backup/Runbook.md#6-Restrict-Access-to-Deny-Regions-Outside-US",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "critical"
            },
            "control_mapping": [],
            "implementations": [
                {
                    "provider": "SCP",
                    "implementation": [
                        "https://github.com/open-itg/aws-security/blob/master/SCP/DenyAllRegionsOutsideUS/DenyAllRegionsOutsideUS.json"
                    ],
                    "type": "prevent"
                }
            ]
        }
    ]
}
