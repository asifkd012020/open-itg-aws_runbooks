{
    "serviceprovider":"aws",
    "servicerequirement_name": [
        "AWS::ECS::*"
    ],
    "servicedisplay_name": "ECS",
    "serviceapproval_status": {
        "Prod": "approved",
        "SNP": "approved",
        "NP": "approved"
    },
    "phase": "discovery",
    "mapping": [
        {
            "requirement_name": "Implement least privilege IAM Roles for Tasks",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/ecs/RUNBOOK.md#1-implement-least-privilege-iam-roles-for-tasks",
            "category": "IAM",
            "ticket_enabled": "true",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": [
                {
                    "provider": "dome9",
                    "implementation": [
                        "https://bitbucket.capgroup.com/projects/CLSEC/repos/dome9/browse/AWS_Rulesets/CG-AWS-SO-NetworkControl.json#63",
                        "https://bitbucket.capgroup.com/projects/CLSEC/repos/dome9/browse/AWS_Rulesets/CG-AWS-SO-NetworkControl.json#73"
                    ],
                    "type": "detect"
                },
                {
                    "provider": "aws_config",
                    "implementation": [
                        "https://github.com/open-itg/aws-conformance-packs/tree/master/ecs-td-ro-root-filsystem",
                        "https://github.com/open-itg/aws-conformance-packs/tree/master/ecs-td-ephe-vol-filsystem"
                    ],
                    "type": "detect"
                },
                {
                    "provider": "panoptes",
                    "implementation": [
                        "https://github.com/open-itg/panoptes/blob/master/panoptes-rules/ecs.py"
                    ],
                    "type": "prevent"
                }
            ]
        },
        {
            "requirement_name": "Using Elastic Container Registry (ECR) for storing and retrieving Docker images",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/ecs/RUNBOOK.md#2-using-elastic-container-registry-ecr-for-storing-and-retrieving-docker-images",
            "category": "Best Practice",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Configuring VPC endpoint for ECS",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/ecs/RUNBOOK.#3-Configuring-VPC-Endpoints-for-ECR/ECS",
            "category": "Public Access",
            "ticket_enabled": "true",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": [
                {
                    "provider": "dome9",
                    "implementation": [
                        "https://bitbucket.capgroup.com/projects/CLSEC/repos/dome9/browse/AWS_Rulesets/CG-AWS-SO-NetworkControl.json#43",
                        "https://bitbucket.capgroup.com/projects/CLSEC/repos/dome9/browse/AWS_Rulesets/CG-AWS-SO-NetworkControl.json#53"
                    ],
                    "type": "detect"
                },
                {
                    "provider": "sentinel",
                    "implementation": [
                        "https://github.com/open-itg/sentinel_policies/blob/master/broad_policies/privacy_standards_policies/ecs_standards.sentinel"
                    ],
                    "type": "prevent"
                }
            ]
        },
        {
            "requirement_name": "Configuring AWS Systems Manager Parameter Store and AWS Secrets Manager for reference of secrets into Container Definitions",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/ecs/RUNBOOK.#4-Consider-using-AWS-Systems-Manager-Parameter-Store-or-AWS-Secrets-Manager-for-reference-of-secrets-into-Container-Definitions",
            "category": "Best Practice",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Specifying sensitive data using AWS secrets manager",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/ecs/RUNBOOK.md#5-specifying-sensitive-data-using-aws-secrets-manager",
            "category": "Best Practice",
            "ticket_enabled": "true",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": [
                {
                    "provider": "dome9",
                    "implementation": [
                        "https://bitbucket.capgroup.com/projects/CLSEC/repos/dome9/browse/AWS_Rulesets/CG-AWS-SO-EncryptionAndKeyManagement.json#83"
                    ],
                    "type": "detect"
                }
            ]
        },
        {
            "requirement_name": "Using the awslogs Log Driver",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/ecs/RUNBOOK.md#6-using-the-awslogs-log-driver",
            "category": "Logging",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Creating a Trail to log ECS API calls",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/ecs/RUNBOOK.md#7-creating-a-trail-to-log-ecs-api-calls",
            "category": "Logging",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Running the X-Ray Daemon",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/ecs/RUNBOOK.md#8-running-the-x-ray-daemon",
            "category": "Logging",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Utilizing AWS CloudWatch Container Insights",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/ecs/RUNBOOK.md#9-utilizing-aws-cloudwatch-container-insights",
            "category": "Logging",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Utilize Amazon ECS Events and EventBridge",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/ecs/RUNBOOK.md#10-utilize-amazon-ecs-events-and-eventbridge",
            "category": "Logging",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Enable VPC Flow Logs for ECS Cluster VPC (EC2 Launch Types Only)",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/ecs/RUNBOOK.md#11-enable-vpc-flow-logs-for-ecs-cluster-vpc-ec2-launch-types-only",
            "category": "Logging",
            "ticket_enabled": "false",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "medium"
            },
            "control_mapping": [],
            "implementations": []
        },
        {
            "requirement_name": "Deny All Regions Outside of US",
            "policy": "https://github.com/open-itg/aws_runbooks/blob/master/backup/Runbook.md#12-Restrict-Access-to-Deny-Regions-Outside-US",
            "tags":[],
            "severity": {
                "Prod": "critical",
                "SNP": "critical",
                "NP": "critical"
            },
            "control_mapping": [],
            "implementations": [
                {
                    "provider": "SCP",
                    "implementation": [
                        "https://github.com/open-itg/aws-security/blob/master/SCP/DenyAllRegionsOutsideUS/DenyAllRegionsOutsideUS.json"
                    ],
                    "type": "prevent"
                }
            ]
        }
    ]
}
